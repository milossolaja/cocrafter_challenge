events { }

http {
    client_max_body_size 100M;

    upstream main_backend {
        server backend:8000;  
    }

    upstream legacy_backend {
        server legacy-backend:8003; 
    }

    server {
        listen 8090;

        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        # Explicitly handle /api/v1/ping
        location = /api/v1/ping {
            proxy_pass http://legacy_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route /api/v1/* to legacy backend
        location /api/v1/ {
            proxy_pass http://legacy_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v2/documents {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Specific large file upload settings
            client_max_body_size 100M;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Route everything else to the new backend
        location / {
            proxy_pass http://main_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}